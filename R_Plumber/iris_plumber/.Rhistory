plumber::plumb(file='plumber.R')$run()
library(jsonlite)
library(caret)
library(e1071)
classifier_svm <- readRDS("model/Iris_SVM_model.RDS")
predict_iris <- function(sepal_length, sepal_width, petal_length, Petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(Petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(list(predict_iris))
}
predict_iris(1,1,1,1,1)
predict_iris(1,1,1,1)
as.character(predict_iris(1,1,1,1))
as.character(predict_iris(1,1,1,1)[[1]])
predict_iris <- function(sepal_length, sepal_width, petal_length, Petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(Petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(as.character(predict_iris[[1]]))
}
predict_iris(1,1,1,1)
plumb(file='plumber.R')$run()
plumb(file='plumber.R')$run()
predict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(as.character(predict_iris[[1]]))
}
predict_iris(1,1,1,1)
plumb(file='plumber.R')$run()
plumb(file='plumber.R')$run()
predict_iris(4,5,6,3)
predict_iris(1,3,1,3)
predict_iris(6,3,6,3)
plumb(file='plumber.R')$run()
plumb(file='plumber.R')$run()
plumb(file='plumber.R')$run()
redict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(list(as.character(predicted_res = predict_iris[[1]])),
dataInput = newSample)
}
predict_iris(1,1,1,1)
predict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(list(as.character(predicted_res = predict_iris[[1]])),
dataInput = newSample)
}
predict_iris(1,1,1,1)
predict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(list(as.character(predicted_res = predict_iris[[1]])))
}
predict_iris(1,1,1,1)
predict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(as.character(predicted_res = predict_iris[[1]])))
}
predict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(as.character(predict_iris[[1]]))
}
predict_iris(1,1,1,1)
list("vesr", iris)
list(a="vesr", b=iris)
predict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(list(predict_res = as.character(predict_iris[[1]])))
}
predict_iris(1,1,1,1)
plumb(file='plumber.R')$run()
list(a = "skkk", b = toJSON(head(iris)))
list(a = "skkk", b = head(iris))
predict_iris <- function(sepal_length, sepal_width, petal_length, petal_width){
newSample <- data.frame(Sepal.Length = as.numeric(sepal_length),
Sepal.Width = as.numeric(sepal_width),
Petal.Length = as.numeric(petal_length),
Petal.Width = as.numeric(petal_width))
predict_iris <- predict(classifier_svm, newdata = newSample)
return(list(predict_res = as.character(predict_iris[[1]]),
input = newSample))
}
predict_iris(1,1,1,1)
plumb(file='plumber.R')$run()
plumb(file='plumber.R')$run()
plumber::plumb(file='plumber.R')$run()
